#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Herald = read.csv(file = "data/ApprovSctiv.csv")
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Herald = read.csv(file = "data/ApprovActiv.csv")
# Set your working directory below if it is not already set to the current 'Lecture Notes' directory.
# Your directory must be set to tell R where to find the data file for Maine monthly unemployment
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Build.dat = read.csv(file = "data/ApprovActiv.csv")
App.ts <- ts(Approvals, start = c(1996,1), freq=4)
View(Build.dat)
App.ts <- ts(Build.dat$Approvals, start = c(1996,1), freq=4)
Act.ts <- ts(Build.dat$Activity, start = c(1996,1), freq=4)
ts.plot(App.ts, Act.ts, lty = c(1,3))
acf(ts.union(App.ts, Act.ts))
app.ran <- decompose(App.ts)$random
app.ran.ts <- window (app.ran, start = c(1996, 3) )
act.ran <- decompose (Act.ts)$random
act.ran.ts <- window (act.ran, start = c(1996, 3) )
acf (ts.union(app.ran.ts, act.ran.ts))
app.ran.ts
act.ran.ts
app.ran
?window
app.ran <- decompose(App.ts)$random
app.ran.ts <- window (app.ran, start = c(1996, 3), end = c(2006, 1))
act.ran <- decompose (Act.ts)$random
act.ran.ts <- window (act.ran, start = c(1996, 3), end = c(2006, 1))
acf (ts.union(app.ran.ts, act.ran.ts))
ccf (app.ran.ts, act.ran.ts)
print(acf(ts.union(app.ran.ts, act.ran.ts)))
T79 <- 1:10
Tdelt <- (1:100) / 10
Sales <- c(840,1470,2110,4000, 7590, 10950, 10530, 9470, 7790, 5890)
Cusales <- cumsum(Sales)
Bass.nls <- nls(Sales ~ M * ( ((P+Q)^2 / P) * exp(-(P+Q) * T79) ) /
(1+(Q/P)*exp(-(P+Q)*T79))^2, start = list(M=60630, P=0.03, Q=0.38))
summary(Bass.nls)
Bcoef <- coef(Bass.nls)
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p+q) * Tdelt)
Bpdf <- m * ( (p+q)^2 / p ) * ngete / (1 + (q/p) * ngete)^2
plot(Tdelt, Bpdf, xlab = "Year from 1979",
ylab = "Sales per year", type='l')
points(T79, Sales)
Bcdf <- m * (1 - ngete)/(1 + (q/p)*ngete)
plot(Tdelt, Bcdf, xlab = "Year from 1979",
ylab = "Cumulative sales", type='l')
points(T79, Cusales)
T79 <- 1:10
Tdelt <- (1:100) / 10
Sales <- c(840,1470,2110,4000, 7590, 10950, 10530, 9470, 7790, 5890)
Cusales <- cumsum(Sales)
Bass.nls <- nls(Sales ~ M * ( ((P+Q)^2 / P) * exp(-(P+Q) * T79) ) /
(1+(Q/P)*exp(-(P+Q)*T79))^2, start = list(M=60630, P=0.03, Q=0.38))
summary(Bass.nls)
Motor.dat <- read.csv("data/motororg.csv")
Motor.dat <- read.csv("data/motororg.csv")
Comp.ts <- ts(complaints, start = c(1996, 1), freq = 12)
Motor.dat <- read.csv("data/motororg.csv")
Comp.ts <- ts(Motor.dat$complaints, start = c(1996, 1), freq = 12)
plot(Comp.ts, xlab = "Time / months", ylab = "Complaints")
Comp.hw1 <- HoltWinters(Motor.dat$complaints, beta = 0, gamma = 0) ; Comp.hw1
Motor.dat$complaints
Comp.hw1 <- HoltWinters(Motor.dat$complaints, beta = 0, gamma = 0)
Comp.hw1 <- HoltWinters(ts(Motor.dat$complaints), beta = 0, gamma = 0)
Motor.dat
HoltWinters(Motor.dat$complaints)
Comp.ts
Comp.hw1 <- HoltWinters(Comp.ts, beta = 0, gamma = 0)
Comp.hw1
plot(Comp.hw1)
Comp.hw1 <- HoltWinters(Comp.ts, beta = 0, gamma = 0)
Comp.hw1
plot(Comp.hw1)
Comp.ts
Comp.hw1 <- HoltWinters(Comp.ts, beta = 0, gamma = 0)
Comp.hw1
plot(Comp.hw1)
wine.dat <- read.csv("data/motororg.csv")
sweetw.ts <- ts(wine.dat$sweetw, start = c(1980,1), freq = 12)
wine.dat$sweetw
wine.dat
wine.dat <- read.csv("data/wine.csv")
sweetw.ts <- ts(wine.dat$sweetw, start = c(1980,1), freq = 12)
plot(sweetw.ts, xlab= "Time (months)", ylab = "sales (1000 litres)")
sweetw.hw <- HoltWinters (sweetw.ts, seasonal = "mult")
sweetw.hw
sweetw.hw$coef
sweetw.hw$SSE
plot (sweetw.hw$fitted)
plot (sweetw.hw)
# Set your working directory below if it is not already set to the current 'Lecture Notes' directory.
# Your directory must be set to tell R where to find the data file for Maine monthly unemployment
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Build.dat = read.csv(file = "data/ApprovActiv.csv")
View(Build.dat)
App.ts <- ts(Build.dat$Approvals, start = c(1996,1), freq=4)
Act.ts <- ts(Build.dat$Activity, start = c(1996,1), freq=4)
ts.plot(App.ts, Act.ts, lty = c(1,3))
acf(ts.union(App.ts, Act.ts))
app.ran <- decompose(App.ts)$random
app.ran <- decompose(App.ts)$random
app.ran.ts <- window (app.ran, start = c(1996, 3), end = c(2006, 1))
act.ran <- decompose (Act.ts)$random
act.ran.ts <- window (act.ran, start = c(1996, 3), end = c(2006, 1))
acf (ts.union(app.ran.ts, act.ran.ts))
ccf (app.ran.ts, act.ran.ts)
print(acf(ts.union(app.ran.ts, act.ran.ts)))
T79 <- 1:10
Tdelt <- (1:100) / 10
Sales <- c(840, 1470, 2110, 4000, 7590, 10950, 10530, 9470, 7790, 5890)
Cusales <- cumsum(Sales)
Bass.nls <- nls(Sales ~ M * ( ((P+Q)^2 / P) * exp(-(P+Q) * T79) ) /
(1+(Q/P)*exp(-(P+Q)*T79))^2,
start = list(M=60630, P=0.03, Q=0.38))
summary(Bass.nls)
Bcoef <- coef(Bass.nls)
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p+q) * Tdelt)
Bpdf <- m * ( (p+q)^2 / p ) * ngete / (1 + (q/p) * ngete)^2
plot(Tdelt, Bpdf, xlab = "Year from 1979",
ylab = "Sales per year", type='l')
points(T79, Sales)
Bcdf <- m * (1 - ngete)/(1 + (q/p)*ngete)
plot(Tdelt, Bcdf, xlab = "Year from 1979",
ylab = "Cumulative sales", type='l')
points(T79, Cusales)
Motor.dat <- read.csv("data/motororg.csv")
Comp.ts <- ts(Motor.dat$complaints, start = c(1996, 1), freq = 12)
plot(Comp.ts, xlab = "Time / months", ylab = "Complaints")
Comp.hw1 <- HoltWinters(Comp.ts, beta = 0, gamma = 0)
Comp.hw1
plot(Comp.hw1)
wine.dat <- read.csv("data/wine.csv")
sweetw.ts <- ts(wine.dat$sweetw, start = c(1980,1), freq = 12)
plot(sweetw.ts, xlab= "Time (months)", ylab = "sales (1000 litres)")
sweetw.hw <- HoltWinters (sweetw.ts, seasonal = "mult")
sweetw.hw
sweetw.hw$coef
sweetw.hw$SSE
plot (sweetw.hw$fitted)
plot (sweetw.hw)
set.seed(1)
x <- rnorm(1000)
w <- x
for (i in 3:1000){
x[i] <- 0.5 * x[i - 1] + x[i - 1] - 0.5 *
x[i - 2] + w[i] + 0.3 * w[i - 1]
}
arima(x, order = c(1, 1, 1))
x <- arima.sim(model = list(order = c(1, 1, 1), ar = 0.5, ma = 0.3), n = 1000)
arima(x, order = c(1, 1, 1))
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Elec = read.csv(file = "data/beer.csv", header = T)
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Beer = read.csv(file = "data/beer.csv", header = T)
Beer
Beer.ts <- ts(Beer, start = 1958, freq = 12)
Beer.ima <- arima(Beer.ts, order = c(0, 1, 1))
Beer.ima
acf(resid(Beer.ima))
Beer.1991 <- predict(Beer.ima, n.ahead = 12)
sum(Beer.1991$pred)
AIC (arima(log(Elec.ts), order = c(1,1,0),
seas = list(order = c(1,0,0), 12)))
# Set your working directory below if it is not already set to the current 'Lecture Notes' directory.
# Your directory must be set to tell R where to find the data file for Maine monthly unemployment
#setwd("C:/Users/kmac4/Documents/St. Elizabeth University/CS-637-Time-Series-and-Forecasting-/Lecture Notes")
Elec = read.csv(file = "data/elec.csv", header = T)
Elec.ts <- ts(Elec, start = 1958, freq = 12)
Time <- 1:length(Elec.ts)
Imth <- cycle(Elec.ts)
Elec.lm <- lm(log(Elec.ts) ~ Time + I(Time^2) + factor(Imth))
acf(resid(Elec.lm))
AIC (arima(log(Elec.ts), order = c(1,1,0),
seas = list(order = c(1,0,0), 12)))
AIC (arima(log(Elec.ts), order = c(0,1,1),
seas = list(order = c(0,0,1), 12)))
get.best.arima <- function(x.ts, maxord = c(1,1,1,1,1,1)) {
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3]){
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6]){
fit <- arima(x.ts, order = c(p,d,q),
seas = list(order = c(P,D,Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic){
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
list(best.aic, best.fit, best.model)
}
}
best.arima.elec <- get.best.arima( log(Elec.ts),
maxord = c(2,2,2,2,2,2))
best.fit.elec <- best.arima.elec[[2]]
acf( resid(best.fit.elec) )
best.fit.elec <- best.arima.elec[[2]]
acf(resid(best.fit.elec) )
acf(resid(best.fit.elec))
best.fit.elec
get.best.arima <- function(x.ts, maxord = c(1,1,1,1,1,1)) {
best.aic <- 1e8
n <- length(x.ts)
for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3]){
for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6]){
fit <- arima(x.ts, order = c(p,d,q),
seas = list(order = c(P,D,Q),
frequency(x.ts)), method = "CSS")
fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
if (fit.aic < best.aic){
best.aic <- fit.aic
best.fit <- fit
best.model <- c(p,d,q,P,D,Q)
}
}
}
return(list(best.aic, best.fit, best.model))
}
best.arima.elec <- get.best.arima( log(Elec.ts),
maxord = c(2,2,2,2,2,2))
best.fit.elec <- best.arima.elec[[2]]
acf(resid(best.fit.elec))
best.arima.elec[[3]]
ts.plot( cbind( window(Elec.ts,start = 1981),
exp(predict(best.fit.elec,12)$pred) ), lty = 1:2)
